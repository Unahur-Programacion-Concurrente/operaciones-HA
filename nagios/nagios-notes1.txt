NAGIOS


SERVER

55  sudo vi /usr/local/nagios/etc/objects/appserver1.cfg
   56  sudo vi /usr/local/nagios/etc/nagios.cfg
   57  sudo /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
   58  sudo vi /usr/local/nagios/etc/objects/commands.cfg.
   59  ls
   60  pwd
   61  sudo vi /usr/local/nagios/etc/objects/commands.cfg
   62  sudo /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
   63  sudo systemctl restart nagios


Aquí tienes un ejemplo de archivo de configuración completo para monitorear un servidor remoto llamado appserver1 (suponiendo que este servidor está ejecutando una aplicación Node.js) utilizando Nagios y NRPE. El archivo define el servidor y los servicios que deseas monitorear, como el uso de CPU, RAM, disco y la disponibilidad de la aplicación Node.js.

sudo vi /usr/local/nagios/etc/objects/appserver1.cfg


# Definición del host remoto (appserver1)
define host {
    use                     linux-server          ; Usa la plantilla linux-server predeterminada
    host_name               appserver1            ; Nombre del servidor
    alias                   Servidor de Aplicación Node.js   ; Descripción del servidor
    address                 <IP_DEL_SERVIDOR_APPSERVER1> ; IP del servidor
    max_check_attempts       5                     ; Intentos máximos antes de marcar como fallido
    check_period            24x7                   ; Chequeo todo el tiempo
    notification_interval    30                    ; Intervalo de notificación en minutos
    notification_period      24x7                  ; Enviar notificaciones todo el tiempo
}

# Servicio de Ping para verificar si el servidor está disponible
define service {
    use                     generic-service        ; Usa la plantilla genérica de servicio
    host_name               appserver1
    service_description     Ping
    check_command           check_ping!100.0,20%!500.0,60%  ; Comando para verificar si el servidor responde
}

# Monitoreo de carga de CPU en el servidor
define service {
    use                     generic-service
    host_name               appserver1
    service_description     CPU Load
    check_command           check_nrpe!check_cpu   ; Comando NRPE para verificar la carga de la CPU
}

# Monitoreo del uso de RAM en el servidor
define service {
    use                     generic-service
    host_name               appserver1
    service_description     RAM Usage
    check_command           check_nrpe!check_mem   ; Comando NRPE para verificar el uso de memoria
}

# Monitoreo del uso de disco en el servidor
define service {
    use                     generic-service
    host_name               appserver1
    service_description     Disk Usage
    check_command           check_nrpe!check_disk  ; Comando NRPE para verificar el espacio en disco
}

# Monitoreo del servicio Node.js en el servidor (asume que la aplicación escucha en el puerto 3000)
define service {
    use                     generic-service
    host_name               appserver1
    service_description     Node.js Service
    check_command           check_tcp!3000         ; Verifica si el puerto 3000 está escuchando (aplicación Node.js)
}

# Monitoreo del servicio HTTP (opcional, si el servidor tiene habilitado HTTP)
define service {
    use                     generic-service
    host_name               appserver1
    service_description     HTTP
    check_command           check_http             ; Verifica si el servidor responde a solicitudes HTTP
}

# Monitoreo de latencia de red
define service {
    use                     generic-service
    host_name               appserver1
    service_description     Network Latency
    check_command           check_nrpe!check_ping
}


Guarda el archivo y asegúrate de que esté referenciado en tu archivo de configuración principal de Nagios (nagios.cfg):

sudo nano /usr/local/nagios/etc/nagios.cfg

Agrega la línea:
cfg_file=/usr/local/nagios/etc/objects/appserver1.cfg


Verifica la configuración:
sudo /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg


Si todo está correcto, reinicia el servicio de Nagios:
sudo systemctl restart nagios


ERROR FIX:
El error que estás viendo se debe a que los comandos check_nrpe!check_cpu, check_nrpe!check_disk, check_nrpe!check_ping, y check_nrpe!check_mem no están definidos en tu archivo de configuración de Nagios, lo que impide que Nagios ejecute correctamente esos chequeos.

Definir el comando check_nrpe en Nagios:

Primero, asegúrate de que el comando check_nrpe esté definido correctamente en el archivo de configuración de comandos, normalmente ubicado en /usr/local/nagios/etc/objects/commands.cfg.

Abre o edita este archivo y añade la definición del comando check_nrpe:

define command {
    command_name    check_nrpe
    command_line    /usr/local/nagios/libexec/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
}


ESto no lo hice:
Definir los comandos específicos en NRPE (en el servidor remoto):

Los comandos como check_cpu, check_disk, check_ping, y check_mem necesitan estar definidos en el servidor remoto (en este caso, appserver1). En el servidor remoto, edita el archivo de configuración de NRPE (/etc/nagios/nrpe.cfg o /usr/local/nagios/etc/nrpe.cfg) y asegúrate de que esos comandos estén definidos.

Aquí tienes algunos ejemplos de comandos que puedes agregar a nrpe.cfg en el servidor remoto:

command[check_cpu]=/usr/local/nagios/libexec/check_cpu -w 85 -c 95
command[check_disk]=/usr/local/nagios/libexec/check_disk -w 20% -c 10% -p /
command[check_ping]=/usr/local/nagios/libexec/check_ping -H $HOSTADDRESS$ -w 100.0,20% -c 500.0,60% -p 5
command[check_mem]=/usr/local/nagios/libexec/check_mem -w 85 -c 95

Asegúrate de que las rutas a los plugins de Nagios (/usr/local/nagios/libexec/) sean correctas. Si los plugins están en una ubicación diferente, ajusta las rutas en consecuencia.

Reiniciar el servicio NRPE en el servidor remoto:

Una vez que hayas añadido los comandos a nrpe.cfg en el servidor remoto, reinicia el servicio NRPE:

sudo systemctl restart nagios-nrpe-server

Esto si lo hice:
Reiniciar Nagios en el servidor principal:

Después de hacer los cambios en el servidor remoto, reinicia o recarga Nagios en el servidor principal para aplicar los cambios:

sudo systemctl restart nagios

O puedes recargar la configuración de Nagios sin reiniciar todo el servicio:

sudo systemctl reload nagios

Verificar la configuración:

Después de hacer estos cambios, puedes ejecutar nuevamente el comando de verificación de configuración de Nagios:

sudo /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg


Resumen:
Asegúrate de que el comando check_nrpe esté definido en commands.cfg.
Define los comandos check_cpu, check_disk, check_ping, y check_mem en el archivo nrpe.cfg en el servidor remoto.
Reinicia los servicios nagios-nrpe-server en el servidor remoto y Nagios en el servidor principal.
Verifica que los errores se hayan resuelto ejecutando nuevamente la verificación de la configuración de Nagios.



PARA MONGODB